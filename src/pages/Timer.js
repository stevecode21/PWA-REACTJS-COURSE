import React from 'react'

export default class Timer extends React.Component {

  constructor(props) {
    super(props)
    this.state = { timer: 3, timeLeft: 0 }
  }

  start = async () => {
    // Validamos si hay notificaciones disponibles y tambi칠n validamos si tenemos un service worker
    if (!('Notification' in window) || !('serviceWorker' in navigator)) {
      /* En Android las notificaciones necesitan un service worker */
      // Ponemos un alert
      return alert('Tu browser no soporta notificaciones')
    }
    // Ahora validamos si tenemos el permiso necesario para realizar las notificaciones, para eso usamos Notification.permission, que nos dir치 que permiso tenemos, generalmente estar치 en default, cuando sea as칤, pediremos permiso al usuario
    if (Notification.permission === 'default') {
      // Ahora usamos await con la request permission, que nos avisa recien cuando el usuario clickee
      await Notification.requestPermission()
    }

    // Ahora validamos si  el permiso est치 bloqueado
    if (Notification.permission === 'blocked') {
      return alert("Bloqueaste las notificaciones 游뗷")
    }

    // Validamos si el permiso est치 activo
    if (Notification.permission !== 'granted') {
      return
    }



    var timer = this.state.timer
    this.setState({ timeLeft: timer })

    var countdownInterval = setInterval(() => {
      timer = timer - 1;
      this.setState({ timeLeft: timer })
      if (timer <= 0) {
        clearInterval(countdownInterval)
        this.showNotification()
      }
    }, 1000)
  }

  //Este m칠todo me ayudar치 a mostrar la notificaci칩n
  showNotification = async () => {
    // Para empezar, requeriremos del service worker, asi que solo funcionara en modo producci칩n
    const registration = await navigator.serviceWorker.getRegistration()

    // Hacemos un peque침o chequeo del service worker, si no est치 registrado
    if (!registration) return alert("No hay un Service Worker")

    // Por ultimo enviamos la notificaci칩n, con showNotification, en el primer argumento, enviamos el mensaje y por otra parte tenemos un argumento de opciones
    registration.showNotification("Listo el timer 游땎", {
      // Aqu칤 podemos setear el body, que es un texto aclaratorio
      body: 'Ding ding ding',
      // Seteamos una imagen, un peque침o icono
      img: '/icon.png'
    })

  }

  handleChange = (e) => {
    this.setState({ timer: e.target.value })
  }

  render() {
    const { timer, timeLeft } = this.state

    return <div className="Timer">
      <div className="name">Timer</div>
      {timeLeft === 0 ?
        <div className="center">
          <input type="number" min="0" max="999" step="1" value={timer} onChange={this.handleChange} />
          <button onClick={this.start}>Start</button>
        </div>
        :
        <div className="timeLeft">{timeLeft}s</div>
      }
    </div>
  }
}
